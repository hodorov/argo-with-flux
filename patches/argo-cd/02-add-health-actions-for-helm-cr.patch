Add health & actions for helm CR

From: el1191 <el1191@woyd.ru>


---
 .../HelmRelease/actions/discovery.lua              |   16 ++++++++
 .../HelmRelease/actions/force reconcile/action.lua |   13 +++++++
 .../HelmRelease/actions/reconcile/action.lua       |   12 ++++++
 .../HelmRelease/actions/resume/action.lua          |    2 +
 .../HelmRelease/actions/suspend/action.lua         |    2 +
 .../helm.toolkit.fluxcd.io/HelmRelease/health.lua  |   30 ++++++++++++++++
 .../Kustomization/actions/discovery.lua            |   16 ++++++++
 .../actions/force reconcile/action.lua             |   13 +++++++
 .../Kustomization/actions/reconcile/action.lua     |   12 ++++++
 .../Kustomization/actions/resume/action.lua        |    2 +
 .../Kustomization/actions/suspend/action.lua       |    2 +
 .../Kustomization/health.lua                       |   30 ++++++++++++++++
 .../Bucket/actions/discovery.lua                   |   16 ++++++++
 .../Bucket/actions/force reconcile/action.lua      |   13 +++++++
 .../Bucket/actions/reconcile/action.lua            |   12 ++++++
 .../Bucket/actions/resume/action.lua               |    2 +
 .../Bucket/actions/suspend/action.lua              |    2 +
 .../source.toolkit.fluxcd.io/Bucket/health.lua     |   31 ++++++++++++++++
 .../GitRepository/actions/discovery.lua            |   16 ++++++++
 .../actions/force reconcile/action.lua             |   13 +++++++
 .../GitRepository/actions/reconcile/action.lua     |   12 ++++++
 .../GitRepository/actions/resume/action.lua        |    2 +
 .../GitRepository/actions/suspend/action.lua       |    2 +
 .../GitRepository/health.lua                       |   31 ++++++++++++++++
 .../HelmChart/actions/discovery.lua                |   16 ++++++++
 .../HelmChart/actions/force reconcile/action.lua   |   13 +++++++
 .../HelmChart/actions/reconcile/action.lua         |   12 ++++++
 .../HelmChart/actions/resume/action.lua            |    2 +
 .../HelmChart/actions/suspend/action.lua           |    2 +
 .../source.toolkit.fluxcd.io/HelmChart/health.lua  |   31 ++++++++++++++++
 .../HelmRepository/actions/discovery.lua           |   16 ++++++++
 .../actions/force reconcile/action.lua             |   13 +++++++
 .../HelmRepository/actions/reconcile/action.lua    |   12 ++++++
 .../HelmRepository/actions/resume/action.lua       |    2 +
 .../HelmRepository/actions/suspend/action.lua      |    2 +
 .../HelmRepository/health.lua                      |   38 ++++++++++++++++++++
 .../OCIRepository/actions/discovery.lua            |   16 ++++++++
 .../actions/force reconcile/action.lua             |   13 +++++++
 .../OCIRepository/actions/reconcile/action.lua     |   12 ++++++
 .../OCIRepository/actions/resume/action.lua        |    2 +
 .../OCIRepository/actions/suspend/action.lua       |    2 +
 .../OCIRepository/health.lua                       |   31 ++++++++++++++++
 42 files changed, 537 insertions(+)
 create mode 100644 resource_customizations/helm.toolkit.fluxcd.io/HelmRelease/actions/discovery.lua
 create mode 100644 resource_customizations/helm.toolkit.fluxcd.io/HelmRelease/actions/force reconcile/action.lua
 create mode 100644 resource_customizations/helm.toolkit.fluxcd.io/HelmRelease/actions/reconcile/action.lua
 create mode 100644 resource_customizations/helm.toolkit.fluxcd.io/HelmRelease/actions/resume/action.lua
 create mode 100644 resource_customizations/helm.toolkit.fluxcd.io/HelmRelease/actions/suspend/action.lua
 create mode 100644 resource_customizations/helm.toolkit.fluxcd.io/HelmRelease/health.lua
 create mode 100644 resource_customizations/kustomize.toolkit.fluxcd.io/Kustomization/actions/discovery.lua
 create mode 100644 resource_customizations/kustomize.toolkit.fluxcd.io/Kustomization/actions/force reconcile/action.lua
 create mode 100644 resource_customizations/kustomize.toolkit.fluxcd.io/Kustomization/actions/reconcile/action.lua
 create mode 100644 resource_customizations/kustomize.toolkit.fluxcd.io/Kustomization/actions/resume/action.lua
 create mode 100644 resource_customizations/kustomize.toolkit.fluxcd.io/Kustomization/actions/suspend/action.lua
 create mode 100644 resource_customizations/kustomize.toolkit.fluxcd.io/Kustomization/health.lua
 create mode 100644 resource_customizations/source.toolkit.fluxcd.io/Bucket/actions/discovery.lua
 create mode 100644 resource_customizations/source.toolkit.fluxcd.io/Bucket/actions/force reconcile/action.lua
 create mode 100644 resource_customizations/source.toolkit.fluxcd.io/Bucket/actions/reconcile/action.lua
 create mode 100644 resource_customizations/source.toolkit.fluxcd.io/Bucket/actions/resume/action.lua
 create mode 100644 resource_customizations/source.toolkit.fluxcd.io/Bucket/actions/suspend/action.lua
 create mode 100644 resource_customizations/source.toolkit.fluxcd.io/Bucket/health.lua
 create mode 100644 resource_customizations/source.toolkit.fluxcd.io/GitRepository/actions/discovery.lua
 create mode 100644 resource_customizations/source.toolkit.fluxcd.io/GitRepository/actions/force reconcile/action.lua
 create mode 100644 resource_customizations/source.toolkit.fluxcd.io/GitRepository/actions/reconcile/action.lua
 create mode 100644 resource_customizations/source.toolkit.fluxcd.io/GitRepository/actions/resume/action.lua
 create mode 100644 resource_customizations/source.toolkit.fluxcd.io/GitRepository/actions/suspend/action.lua
 create mode 100644 resource_customizations/source.toolkit.fluxcd.io/GitRepository/health.lua
 create mode 100644 resource_customizations/source.toolkit.fluxcd.io/HelmChart/actions/discovery.lua
 create mode 100644 resource_customizations/source.toolkit.fluxcd.io/HelmChart/actions/force reconcile/action.lua
 create mode 100644 resource_customizations/source.toolkit.fluxcd.io/HelmChart/actions/reconcile/action.lua
 create mode 100644 resource_customizations/source.toolkit.fluxcd.io/HelmChart/actions/resume/action.lua
 create mode 100644 resource_customizations/source.toolkit.fluxcd.io/HelmChart/actions/suspend/action.lua
 create mode 100644 resource_customizations/source.toolkit.fluxcd.io/HelmChart/health.lua
 create mode 100644 resource_customizations/source.toolkit.fluxcd.io/HelmRepository/actions/discovery.lua
 create mode 100644 resource_customizations/source.toolkit.fluxcd.io/HelmRepository/actions/force reconcile/action.lua
 create mode 100644 resource_customizations/source.toolkit.fluxcd.io/HelmRepository/actions/reconcile/action.lua
 create mode 100644 resource_customizations/source.toolkit.fluxcd.io/HelmRepository/actions/resume/action.lua
 create mode 100644 resource_customizations/source.toolkit.fluxcd.io/HelmRepository/actions/suspend/action.lua
 create mode 100644 resource_customizations/source.toolkit.fluxcd.io/HelmRepository/health.lua
 create mode 100644 resource_customizations/source.toolkit.fluxcd.io/OCIRepository/actions/discovery.lua
 create mode 100644 resource_customizations/source.toolkit.fluxcd.io/OCIRepository/actions/force reconcile/action.lua
 create mode 100644 resource_customizations/source.toolkit.fluxcd.io/OCIRepository/actions/reconcile/action.lua
 create mode 100644 resource_customizations/source.toolkit.fluxcd.io/OCIRepository/actions/resume/action.lua
 create mode 100644 resource_customizations/source.toolkit.fluxcd.io/OCIRepository/actions/suspend/action.lua
 create mode 100644 resource_customizations/source.toolkit.fluxcd.io/OCIRepository/health.lua

diff --git a/resource_customizations/helm.toolkit.fluxcd.io/HelmRelease/actions/discovery.lua b/resource_customizations/helm.toolkit.fluxcd.io/HelmRelease/actions/discovery.lua
new file mode 100644
index 000000000..6878f489b
--- /dev/null
+++ b/resource_customizations/helm.toolkit.fluxcd.io/HelmRelease/actions/discovery.lua
@@ -0,0 +1,16 @@
+local actions = {}
+
+actions["reconcile"] = {["disabled"] = true}
+actions["force reconcile"] = {["disabled"] = true}
+actions["suspend"] = {["disabled"] = true}
+actions["resume"] = {["disabled"] = true}
+
+if obj.spec.suspend ~= nil and obj.spec.suspend then
+    actions["resume"]["disabled"] = false
+else
+    actions["reconcile"]["disabled"] = false
+    actions["force reconcile"]["disabled"] = false
+    actions["suspend"]["disabled"] = false
+end
+
+return actions
diff --git a/resource_customizations/helm.toolkit.fluxcd.io/HelmRelease/actions/force reconcile/action.lua b/resource_customizations/helm.toolkit.fluxcd.io/HelmRelease/actions/force reconcile/action.lua
new file mode 100644
index 000000000..738e09435
--- /dev/null
+++ b/resource_customizations/helm.toolkit.fluxcd.io/HelmRelease/actions/force reconcile/action.lua	
@@ -0,0 +1,13 @@
+local os = require("os")
+
+if obj.metadata == nil then
+    obj.metadata = {}
+end
+
+if obj.metadata.annotations == nil then
+    obj.metadata.annotations = {}
+end
+
+obj.metadata.annotations["reconcile.fluxcd.io/requestedAt"] = os.date("!%Y-%m-%dT%XZ")
+obj.metadata.annotations["reconcile.fluxcd.io/forceAt"] = os.date("!%Y-%m-%dT%XZ")
+return obj
diff --git a/resource_customizations/helm.toolkit.fluxcd.io/HelmRelease/actions/reconcile/action.lua b/resource_customizations/helm.toolkit.fluxcd.io/HelmRelease/actions/reconcile/action.lua
new file mode 100644
index 000000000..cdb3a29c3
--- /dev/null
+++ b/resource_customizations/helm.toolkit.fluxcd.io/HelmRelease/actions/reconcile/action.lua
@@ -0,0 +1,12 @@
+local os = require("os")
+
+if obj.metadata == nil then
+    obj.metadata = {}
+end
+
+if obj.metadata.annotations == nil then
+    obj.metadata.annotations = {}
+end
+
+obj.metadata.annotations["reconcile.fluxcd.io/requestedAt"] = os.date("!%Y-%m-%dT%XZ")
+return obj
diff --git a/resource_customizations/helm.toolkit.fluxcd.io/HelmRelease/actions/resume/action.lua b/resource_customizations/helm.toolkit.fluxcd.io/HelmRelease/actions/resume/action.lua
new file mode 100644
index 000000000..6434d8887
--- /dev/null
+++ b/resource_customizations/helm.toolkit.fluxcd.io/HelmRelease/actions/resume/action.lua
@@ -0,0 +1,2 @@
+obj.spec.suspend = false
+return obj
diff --git a/resource_customizations/helm.toolkit.fluxcd.io/HelmRelease/actions/suspend/action.lua b/resource_customizations/helm.toolkit.fluxcd.io/HelmRelease/actions/suspend/action.lua
new file mode 100644
index 000000000..a9bfa3db9
--- /dev/null
+++ b/resource_customizations/helm.toolkit.fluxcd.io/HelmRelease/actions/suspend/action.lua
@@ -0,0 +1,2 @@
+obj.spec.suspend = true
+return obj
diff --git a/resource_customizations/helm.toolkit.fluxcd.io/HelmRelease/health.lua b/resource_customizations/helm.toolkit.fluxcd.io/HelmRelease/health.lua
new file mode 100644
index 000000000..c9f50e2c9
--- /dev/null
+++ b/resource_customizations/helm.toolkit.fluxcd.io/HelmRelease/health.lua
@@ -0,0 +1,30 @@
+local hs = {}
+
+if obj.spec.suspend ~= nil and obj.spec.suspend then
+    hs.status = "Suspended"
+    hs.message = "Object suspended"
+    return hs
+end
+
+if obj.status ~= nil and obj.status.conditions ~= nil then
+    local ready_status = ""
+    for _, condition in ipairs(obj.status.conditions) do
+        if condition.type == "Ready" then
+            ready_status = condition.status
+            ready_message = condition.message
+        end
+    end
+    if ready_status == "True" then
+        hs.status = "Healthy"
+    elseif ready_status == "False" then
+        hs.status = "Degraded"
+    elseif ready_status == "Unknown" then
+        hs.status = "Progressing"
+    end
+    hs.message = ready_message
+    return hs
+end
+
+hs.status = "Progressing"
+hs.message = "Waiting to reconcile"
+return hs
diff --git a/resource_customizations/kustomize.toolkit.fluxcd.io/Kustomization/actions/discovery.lua b/resource_customizations/kustomize.toolkit.fluxcd.io/Kustomization/actions/discovery.lua
new file mode 100644
index 000000000..6878f489b
--- /dev/null
+++ b/resource_customizations/kustomize.toolkit.fluxcd.io/Kustomization/actions/discovery.lua
@@ -0,0 +1,16 @@
+local actions = {}
+
+actions["reconcile"] = {["disabled"] = true}
+actions["force reconcile"] = {["disabled"] = true}
+actions["suspend"] = {["disabled"] = true}
+actions["resume"] = {["disabled"] = true}
+
+if obj.spec.suspend ~= nil and obj.spec.suspend then
+    actions["resume"]["disabled"] = false
+else
+    actions["reconcile"]["disabled"] = false
+    actions["force reconcile"]["disabled"] = false
+    actions["suspend"]["disabled"] = false
+end
+
+return actions
diff --git a/resource_customizations/kustomize.toolkit.fluxcd.io/Kustomization/actions/force reconcile/action.lua b/resource_customizations/kustomize.toolkit.fluxcd.io/Kustomization/actions/force reconcile/action.lua
new file mode 100644
index 000000000..738e09435
--- /dev/null
+++ b/resource_customizations/kustomize.toolkit.fluxcd.io/Kustomization/actions/force reconcile/action.lua	
@@ -0,0 +1,13 @@
+local os = require("os")
+
+if obj.metadata == nil then
+    obj.metadata = {}
+end
+
+if obj.metadata.annotations == nil then
+    obj.metadata.annotations = {}
+end
+
+obj.metadata.annotations["reconcile.fluxcd.io/requestedAt"] = os.date("!%Y-%m-%dT%XZ")
+obj.metadata.annotations["reconcile.fluxcd.io/forceAt"] = os.date("!%Y-%m-%dT%XZ")
+return obj
diff --git a/resource_customizations/kustomize.toolkit.fluxcd.io/Kustomization/actions/reconcile/action.lua b/resource_customizations/kustomize.toolkit.fluxcd.io/Kustomization/actions/reconcile/action.lua
new file mode 100644
index 000000000..cdb3a29c3
--- /dev/null
+++ b/resource_customizations/kustomize.toolkit.fluxcd.io/Kustomization/actions/reconcile/action.lua
@@ -0,0 +1,12 @@
+local os = require("os")
+
+if obj.metadata == nil then
+    obj.metadata = {}
+end
+
+if obj.metadata.annotations == nil then
+    obj.metadata.annotations = {}
+end
+
+obj.metadata.annotations["reconcile.fluxcd.io/requestedAt"] = os.date("!%Y-%m-%dT%XZ")
+return obj
diff --git a/resource_customizations/kustomize.toolkit.fluxcd.io/Kustomization/actions/resume/action.lua b/resource_customizations/kustomize.toolkit.fluxcd.io/Kustomization/actions/resume/action.lua
new file mode 100644
index 000000000..6434d8887
--- /dev/null
+++ b/resource_customizations/kustomize.toolkit.fluxcd.io/Kustomization/actions/resume/action.lua
@@ -0,0 +1,2 @@
+obj.spec.suspend = false
+return obj
diff --git a/resource_customizations/kustomize.toolkit.fluxcd.io/Kustomization/actions/suspend/action.lua b/resource_customizations/kustomize.toolkit.fluxcd.io/Kustomization/actions/suspend/action.lua
new file mode 100644
index 000000000..a9bfa3db9
--- /dev/null
+++ b/resource_customizations/kustomize.toolkit.fluxcd.io/Kustomization/actions/suspend/action.lua
@@ -0,0 +1,2 @@
+obj.spec.suspend = true
+return obj
diff --git a/resource_customizations/kustomize.toolkit.fluxcd.io/Kustomization/health.lua b/resource_customizations/kustomize.toolkit.fluxcd.io/Kustomization/health.lua
new file mode 100644
index 000000000..c9f50e2c9
--- /dev/null
+++ b/resource_customizations/kustomize.toolkit.fluxcd.io/Kustomization/health.lua
@@ -0,0 +1,30 @@
+local hs = {}
+
+if obj.spec.suspend ~= nil and obj.spec.suspend then
+    hs.status = "Suspended"
+    hs.message = "Object suspended"
+    return hs
+end
+
+if obj.status ~= nil and obj.status.conditions ~= nil then
+    local ready_status = ""
+    for _, condition in ipairs(obj.status.conditions) do
+        if condition.type == "Ready" then
+            ready_status = condition.status
+            ready_message = condition.message
+        end
+    end
+    if ready_status == "True" then
+        hs.status = "Healthy"
+    elseif ready_status == "False" then
+        hs.status = "Degraded"
+    elseif ready_status == "Unknown" then
+        hs.status = "Progressing"
+    end
+    hs.message = ready_message
+    return hs
+end
+
+hs.status = "Progressing"
+hs.message = "Waiting to reconcile"
+return hs
diff --git a/resource_customizations/source.toolkit.fluxcd.io/Bucket/actions/discovery.lua b/resource_customizations/source.toolkit.fluxcd.io/Bucket/actions/discovery.lua
new file mode 100644
index 000000000..6878f489b
--- /dev/null
+++ b/resource_customizations/source.toolkit.fluxcd.io/Bucket/actions/discovery.lua
@@ -0,0 +1,16 @@
+local actions = {}
+
+actions["reconcile"] = {["disabled"] = true}
+actions["force reconcile"] = {["disabled"] = true}
+actions["suspend"] = {["disabled"] = true}
+actions["resume"] = {["disabled"] = true}
+
+if obj.spec.suspend ~= nil and obj.spec.suspend then
+    actions["resume"]["disabled"] = false
+else
+    actions["reconcile"]["disabled"] = false
+    actions["force reconcile"]["disabled"] = false
+    actions["suspend"]["disabled"] = false
+end
+
+return actions
diff --git a/resource_customizations/source.toolkit.fluxcd.io/Bucket/actions/force reconcile/action.lua b/resource_customizations/source.toolkit.fluxcd.io/Bucket/actions/force reconcile/action.lua
new file mode 100644
index 000000000..738e09435
--- /dev/null
+++ b/resource_customizations/source.toolkit.fluxcd.io/Bucket/actions/force reconcile/action.lua	
@@ -0,0 +1,13 @@
+local os = require("os")
+
+if obj.metadata == nil then
+    obj.metadata = {}
+end
+
+if obj.metadata.annotations == nil then
+    obj.metadata.annotations = {}
+end
+
+obj.metadata.annotations["reconcile.fluxcd.io/requestedAt"] = os.date("!%Y-%m-%dT%XZ")
+obj.metadata.annotations["reconcile.fluxcd.io/forceAt"] = os.date("!%Y-%m-%dT%XZ")
+return obj
diff --git a/resource_customizations/source.toolkit.fluxcd.io/Bucket/actions/reconcile/action.lua b/resource_customizations/source.toolkit.fluxcd.io/Bucket/actions/reconcile/action.lua
new file mode 100644
index 000000000..cdb3a29c3
--- /dev/null
+++ b/resource_customizations/source.toolkit.fluxcd.io/Bucket/actions/reconcile/action.lua
@@ -0,0 +1,12 @@
+local os = require("os")
+
+if obj.metadata == nil then
+    obj.metadata = {}
+end
+
+if obj.metadata.annotations == nil then
+    obj.metadata.annotations = {}
+end
+
+obj.metadata.annotations["reconcile.fluxcd.io/requestedAt"] = os.date("!%Y-%m-%dT%XZ")
+return obj
diff --git a/resource_customizations/source.toolkit.fluxcd.io/Bucket/actions/resume/action.lua b/resource_customizations/source.toolkit.fluxcd.io/Bucket/actions/resume/action.lua
new file mode 100644
index 000000000..6434d8887
--- /dev/null
+++ b/resource_customizations/source.toolkit.fluxcd.io/Bucket/actions/resume/action.lua
@@ -0,0 +1,2 @@
+obj.spec.suspend = false
+return obj
diff --git a/resource_customizations/source.toolkit.fluxcd.io/Bucket/actions/suspend/action.lua b/resource_customizations/source.toolkit.fluxcd.io/Bucket/actions/suspend/action.lua
new file mode 100644
index 000000000..a9bfa3db9
--- /dev/null
+++ b/resource_customizations/source.toolkit.fluxcd.io/Bucket/actions/suspend/action.lua
@@ -0,0 +1,2 @@
+obj.spec.suspend = true
+return obj
diff --git a/resource_customizations/source.toolkit.fluxcd.io/Bucket/health.lua b/resource_customizations/source.toolkit.fluxcd.io/Bucket/health.lua
new file mode 100644
index 000000000..d1336a606
--- /dev/null
+++ b/resource_customizations/source.toolkit.fluxcd.io/Bucket/health.lua
@@ -0,0 +1,31 @@
+local hs = {}
+
+if obj.spec.suspend ~= nil and obj.spec.suspend then
+    hs.status = "Suspended"
+    hs.message = "Object suspended"
+    return hs
+end
+
+
+if obj.status ~= nil and obj.status.conditions ~= nil then
+    local ready_status = ""
+    for _, condition in ipairs(obj.status.conditions) do
+        if condition.type == "Ready" then
+            ready_status = condition.status
+            ready_message = condition.message
+        end
+    end
+    if ready_status == "True" then
+        hs.status = "Healthy"
+    elseif ready_status == "False" then
+        hs.status = "Degraded"
+    elseif ready_status == "Unknown" then
+        hs.status = "Progressing"
+    end
+    hs.message = ready_message
+    return hs
+end
+
+hs.status = "Progressing"
+hs.message = "Waiting to reconcile"
+return hs
diff --git a/resource_customizations/source.toolkit.fluxcd.io/GitRepository/actions/discovery.lua b/resource_customizations/source.toolkit.fluxcd.io/GitRepository/actions/discovery.lua
new file mode 100644
index 000000000..6878f489b
--- /dev/null
+++ b/resource_customizations/source.toolkit.fluxcd.io/GitRepository/actions/discovery.lua
@@ -0,0 +1,16 @@
+local actions = {}
+
+actions["reconcile"] = {["disabled"] = true}
+actions["force reconcile"] = {["disabled"] = true}
+actions["suspend"] = {["disabled"] = true}
+actions["resume"] = {["disabled"] = true}
+
+if obj.spec.suspend ~= nil and obj.spec.suspend then
+    actions["resume"]["disabled"] = false
+else
+    actions["reconcile"]["disabled"] = false
+    actions["force reconcile"]["disabled"] = false
+    actions["suspend"]["disabled"] = false
+end
+
+return actions
diff --git a/resource_customizations/source.toolkit.fluxcd.io/GitRepository/actions/force reconcile/action.lua b/resource_customizations/source.toolkit.fluxcd.io/GitRepository/actions/force reconcile/action.lua
new file mode 100644
index 000000000..738e09435
--- /dev/null
+++ b/resource_customizations/source.toolkit.fluxcd.io/GitRepository/actions/force reconcile/action.lua	
@@ -0,0 +1,13 @@
+local os = require("os")
+
+if obj.metadata == nil then
+    obj.metadata = {}
+end
+
+if obj.metadata.annotations == nil then
+    obj.metadata.annotations = {}
+end
+
+obj.metadata.annotations["reconcile.fluxcd.io/requestedAt"] = os.date("!%Y-%m-%dT%XZ")
+obj.metadata.annotations["reconcile.fluxcd.io/forceAt"] = os.date("!%Y-%m-%dT%XZ")
+return obj
diff --git a/resource_customizations/source.toolkit.fluxcd.io/GitRepository/actions/reconcile/action.lua b/resource_customizations/source.toolkit.fluxcd.io/GitRepository/actions/reconcile/action.lua
new file mode 100644
index 000000000..cdb3a29c3
--- /dev/null
+++ b/resource_customizations/source.toolkit.fluxcd.io/GitRepository/actions/reconcile/action.lua
@@ -0,0 +1,12 @@
+local os = require("os")
+
+if obj.metadata == nil then
+    obj.metadata = {}
+end
+
+if obj.metadata.annotations == nil then
+    obj.metadata.annotations = {}
+end
+
+obj.metadata.annotations["reconcile.fluxcd.io/requestedAt"] = os.date("!%Y-%m-%dT%XZ")
+return obj
diff --git a/resource_customizations/source.toolkit.fluxcd.io/GitRepository/actions/resume/action.lua b/resource_customizations/source.toolkit.fluxcd.io/GitRepository/actions/resume/action.lua
new file mode 100644
index 000000000..6434d8887
--- /dev/null
+++ b/resource_customizations/source.toolkit.fluxcd.io/GitRepository/actions/resume/action.lua
@@ -0,0 +1,2 @@
+obj.spec.suspend = false
+return obj
diff --git a/resource_customizations/source.toolkit.fluxcd.io/GitRepository/actions/suspend/action.lua b/resource_customizations/source.toolkit.fluxcd.io/GitRepository/actions/suspend/action.lua
new file mode 100644
index 000000000..a9bfa3db9
--- /dev/null
+++ b/resource_customizations/source.toolkit.fluxcd.io/GitRepository/actions/suspend/action.lua
@@ -0,0 +1,2 @@
+obj.spec.suspend = true
+return obj
diff --git a/resource_customizations/source.toolkit.fluxcd.io/GitRepository/health.lua b/resource_customizations/source.toolkit.fluxcd.io/GitRepository/health.lua
new file mode 100644
index 000000000..d1336a606
--- /dev/null
+++ b/resource_customizations/source.toolkit.fluxcd.io/GitRepository/health.lua
@@ -0,0 +1,31 @@
+local hs = {}
+
+if obj.spec.suspend ~= nil and obj.spec.suspend then
+    hs.status = "Suspended"
+    hs.message = "Object suspended"
+    return hs
+end
+
+
+if obj.status ~= nil and obj.status.conditions ~= nil then
+    local ready_status = ""
+    for _, condition in ipairs(obj.status.conditions) do
+        if condition.type == "Ready" then
+            ready_status = condition.status
+            ready_message = condition.message
+        end
+    end
+    if ready_status == "True" then
+        hs.status = "Healthy"
+    elseif ready_status == "False" then
+        hs.status = "Degraded"
+    elseif ready_status == "Unknown" then
+        hs.status = "Progressing"
+    end
+    hs.message = ready_message
+    return hs
+end
+
+hs.status = "Progressing"
+hs.message = "Waiting to reconcile"
+return hs
diff --git a/resource_customizations/source.toolkit.fluxcd.io/HelmChart/actions/discovery.lua b/resource_customizations/source.toolkit.fluxcd.io/HelmChart/actions/discovery.lua
new file mode 100644
index 000000000..6878f489b
--- /dev/null
+++ b/resource_customizations/source.toolkit.fluxcd.io/HelmChart/actions/discovery.lua
@@ -0,0 +1,16 @@
+local actions = {}
+
+actions["reconcile"] = {["disabled"] = true}
+actions["force reconcile"] = {["disabled"] = true}
+actions["suspend"] = {["disabled"] = true}
+actions["resume"] = {["disabled"] = true}
+
+if obj.spec.suspend ~= nil and obj.spec.suspend then
+    actions["resume"]["disabled"] = false
+else
+    actions["reconcile"]["disabled"] = false
+    actions["force reconcile"]["disabled"] = false
+    actions["suspend"]["disabled"] = false
+end
+
+return actions
diff --git a/resource_customizations/source.toolkit.fluxcd.io/HelmChart/actions/force reconcile/action.lua b/resource_customizations/source.toolkit.fluxcd.io/HelmChart/actions/force reconcile/action.lua
new file mode 100644
index 000000000..738e09435
--- /dev/null
+++ b/resource_customizations/source.toolkit.fluxcd.io/HelmChart/actions/force reconcile/action.lua	
@@ -0,0 +1,13 @@
+local os = require("os")
+
+if obj.metadata == nil then
+    obj.metadata = {}
+end
+
+if obj.metadata.annotations == nil then
+    obj.metadata.annotations = {}
+end
+
+obj.metadata.annotations["reconcile.fluxcd.io/requestedAt"] = os.date("!%Y-%m-%dT%XZ")
+obj.metadata.annotations["reconcile.fluxcd.io/forceAt"] = os.date("!%Y-%m-%dT%XZ")
+return obj
diff --git a/resource_customizations/source.toolkit.fluxcd.io/HelmChart/actions/reconcile/action.lua b/resource_customizations/source.toolkit.fluxcd.io/HelmChart/actions/reconcile/action.lua
new file mode 100644
index 000000000..cdb3a29c3
--- /dev/null
+++ b/resource_customizations/source.toolkit.fluxcd.io/HelmChart/actions/reconcile/action.lua
@@ -0,0 +1,12 @@
+local os = require("os")
+
+if obj.metadata == nil then
+    obj.metadata = {}
+end
+
+if obj.metadata.annotations == nil then
+    obj.metadata.annotations = {}
+end
+
+obj.metadata.annotations["reconcile.fluxcd.io/requestedAt"] = os.date("!%Y-%m-%dT%XZ")
+return obj
diff --git a/resource_customizations/source.toolkit.fluxcd.io/HelmChart/actions/resume/action.lua b/resource_customizations/source.toolkit.fluxcd.io/HelmChart/actions/resume/action.lua
new file mode 100644
index 000000000..6434d8887
--- /dev/null
+++ b/resource_customizations/source.toolkit.fluxcd.io/HelmChart/actions/resume/action.lua
@@ -0,0 +1,2 @@
+obj.spec.suspend = false
+return obj
diff --git a/resource_customizations/source.toolkit.fluxcd.io/HelmChart/actions/suspend/action.lua b/resource_customizations/source.toolkit.fluxcd.io/HelmChart/actions/suspend/action.lua
new file mode 100644
index 000000000..a9bfa3db9
--- /dev/null
+++ b/resource_customizations/source.toolkit.fluxcd.io/HelmChart/actions/suspend/action.lua
@@ -0,0 +1,2 @@
+obj.spec.suspend = true
+return obj
diff --git a/resource_customizations/source.toolkit.fluxcd.io/HelmChart/health.lua b/resource_customizations/source.toolkit.fluxcd.io/HelmChart/health.lua
new file mode 100644
index 000000000..d1336a606
--- /dev/null
+++ b/resource_customizations/source.toolkit.fluxcd.io/HelmChart/health.lua
@@ -0,0 +1,31 @@
+local hs = {}
+
+if obj.spec.suspend ~= nil and obj.spec.suspend then
+    hs.status = "Suspended"
+    hs.message = "Object suspended"
+    return hs
+end
+
+
+if obj.status ~= nil and obj.status.conditions ~= nil then
+    local ready_status = ""
+    for _, condition in ipairs(obj.status.conditions) do
+        if condition.type == "Ready" then
+            ready_status = condition.status
+            ready_message = condition.message
+        end
+    end
+    if ready_status == "True" then
+        hs.status = "Healthy"
+    elseif ready_status == "False" then
+        hs.status = "Degraded"
+    elseif ready_status == "Unknown" then
+        hs.status = "Progressing"
+    end
+    hs.message = ready_message
+    return hs
+end
+
+hs.status = "Progressing"
+hs.message = "Waiting to reconcile"
+return hs
diff --git a/resource_customizations/source.toolkit.fluxcd.io/HelmRepository/actions/discovery.lua b/resource_customizations/source.toolkit.fluxcd.io/HelmRepository/actions/discovery.lua
new file mode 100644
index 000000000..6878f489b
--- /dev/null
+++ b/resource_customizations/source.toolkit.fluxcd.io/HelmRepository/actions/discovery.lua
@@ -0,0 +1,16 @@
+local actions = {}
+
+actions["reconcile"] = {["disabled"] = true}
+actions["force reconcile"] = {["disabled"] = true}
+actions["suspend"] = {["disabled"] = true}
+actions["resume"] = {["disabled"] = true}
+
+if obj.spec.suspend ~= nil and obj.spec.suspend then
+    actions["resume"]["disabled"] = false
+else
+    actions["reconcile"]["disabled"] = false
+    actions["force reconcile"]["disabled"] = false
+    actions["suspend"]["disabled"] = false
+end
+
+return actions
diff --git a/resource_customizations/source.toolkit.fluxcd.io/HelmRepository/actions/force reconcile/action.lua b/resource_customizations/source.toolkit.fluxcd.io/HelmRepository/actions/force reconcile/action.lua
new file mode 100644
index 000000000..738e09435
--- /dev/null
+++ b/resource_customizations/source.toolkit.fluxcd.io/HelmRepository/actions/force reconcile/action.lua	
@@ -0,0 +1,13 @@
+local os = require("os")
+
+if obj.metadata == nil then
+    obj.metadata = {}
+end
+
+if obj.metadata.annotations == nil then
+    obj.metadata.annotations = {}
+end
+
+obj.metadata.annotations["reconcile.fluxcd.io/requestedAt"] = os.date("!%Y-%m-%dT%XZ")
+obj.metadata.annotations["reconcile.fluxcd.io/forceAt"] = os.date("!%Y-%m-%dT%XZ")
+return obj
diff --git a/resource_customizations/source.toolkit.fluxcd.io/HelmRepository/actions/reconcile/action.lua b/resource_customizations/source.toolkit.fluxcd.io/HelmRepository/actions/reconcile/action.lua
new file mode 100644
index 000000000..cdb3a29c3
--- /dev/null
+++ b/resource_customizations/source.toolkit.fluxcd.io/HelmRepository/actions/reconcile/action.lua
@@ -0,0 +1,12 @@
+local os = require("os")
+
+if obj.metadata == nil then
+    obj.metadata = {}
+end
+
+if obj.metadata.annotations == nil then
+    obj.metadata.annotations = {}
+end
+
+obj.metadata.annotations["reconcile.fluxcd.io/requestedAt"] = os.date("!%Y-%m-%dT%XZ")
+return obj
diff --git a/resource_customizations/source.toolkit.fluxcd.io/HelmRepository/actions/resume/action.lua b/resource_customizations/source.toolkit.fluxcd.io/HelmRepository/actions/resume/action.lua
new file mode 100644
index 000000000..6434d8887
--- /dev/null
+++ b/resource_customizations/source.toolkit.fluxcd.io/HelmRepository/actions/resume/action.lua
@@ -0,0 +1,2 @@
+obj.spec.suspend = false
+return obj
diff --git a/resource_customizations/source.toolkit.fluxcd.io/HelmRepository/actions/suspend/action.lua b/resource_customizations/source.toolkit.fluxcd.io/HelmRepository/actions/suspend/action.lua
new file mode 100644
index 000000000..a9bfa3db9
--- /dev/null
+++ b/resource_customizations/source.toolkit.fluxcd.io/HelmRepository/actions/suspend/action.lua
@@ -0,0 +1,2 @@
+obj.spec.suspend = true
+return obj
diff --git a/resource_customizations/source.toolkit.fluxcd.io/HelmRepository/health.lua b/resource_customizations/source.toolkit.fluxcd.io/HelmRepository/health.lua
new file mode 100644
index 000000000..1e429ac7a
--- /dev/null
+++ b/resource_customizations/source.toolkit.fluxcd.io/HelmRepository/health.lua
@@ -0,0 +1,38 @@
+local hs = {}
+
+if obj.spec.suspend ~= nil and obj.spec.suspend then
+    hs.status = "Suspended"
+    hs.message = "Object suspended"
+    return hs
+end
+
+if obj.spec.type == "oci" then
+    -- https://fluxcd.io/flux/components/source/helmrepositories/#helm-oci-repository
+    -- Always ready, see link
+    hs.status  = "Healthy"
+    hs.message = "OCI HelmRepository always ready"
+    return hs
+end
+
+if obj.status ~= nil and obj.status.conditions ~= nil then
+    local ready_status = ""
+    for _, condition in ipairs(obj.status.conditions) do
+        if condition.type == "Ready" then
+            ready_status = condition.status
+            ready_message = condition.message
+        end
+    end
+    if ready_status == "True" then
+        hs.status = "Healthy"
+    elseif ready_status == "False" then
+        hs.status = "Degraded"
+    elseif ready_status == "Unknown" then
+        hs.status = "Progressing"
+    end
+    hs.message = ready_message
+    return hs
+end
+
+hs.status = "Progressing"
+hs.message = "Waiting to reconcile"
+return hs
diff --git a/resource_customizations/source.toolkit.fluxcd.io/OCIRepository/actions/discovery.lua b/resource_customizations/source.toolkit.fluxcd.io/OCIRepository/actions/discovery.lua
new file mode 100644
index 000000000..6878f489b
--- /dev/null
+++ b/resource_customizations/source.toolkit.fluxcd.io/OCIRepository/actions/discovery.lua
@@ -0,0 +1,16 @@
+local actions = {}
+
+actions["reconcile"] = {["disabled"] = true}
+actions["force reconcile"] = {["disabled"] = true}
+actions["suspend"] = {["disabled"] = true}
+actions["resume"] = {["disabled"] = true}
+
+if obj.spec.suspend ~= nil and obj.spec.suspend then
+    actions["resume"]["disabled"] = false
+else
+    actions["reconcile"]["disabled"] = false
+    actions["force reconcile"]["disabled"] = false
+    actions["suspend"]["disabled"] = false
+end
+
+return actions
diff --git a/resource_customizations/source.toolkit.fluxcd.io/OCIRepository/actions/force reconcile/action.lua b/resource_customizations/source.toolkit.fluxcd.io/OCIRepository/actions/force reconcile/action.lua
new file mode 100644
index 000000000..738e09435
--- /dev/null
+++ b/resource_customizations/source.toolkit.fluxcd.io/OCIRepository/actions/force reconcile/action.lua	
@@ -0,0 +1,13 @@
+local os = require("os")
+
+if obj.metadata == nil then
+    obj.metadata = {}
+end
+
+if obj.metadata.annotations == nil then
+    obj.metadata.annotations = {}
+end
+
+obj.metadata.annotations["reconcile.fluxcd.io/requestedAt"] = os.date("!%Y-%m-%dT%XZ")
+obj.metadata.annotations["reconcile.fluxcd.io/forceAt"] = os.date("!%Y-%m-%dT%XZ")
+return obj
diff --git a/resource_customizations/source.toolkit.fluxcd.io/OCIRepository/actions/reconcile/action.lua b/resource_customizations/source.toolkit.fluxcd.io/OCIRepository/actions/reconcile/action.lua
new file mode 100644
index 000000000..cdb3a29c3
--- /dev/null
+++ b/resource_customizations/source.toolkit.fluxcd.io/OCIRepository/actions/reconcile/action.lua
@@ -0,0 +1,12 @@
+local os = require("os")
+
+if obj.metadata == nil then
+    obj.metadata = {}
+end
+
+if obj.metadata.annotations == nil then
+    obj.metadata.annotations = {}
+end
+
+obj.metadata.annotations["reconcile.fluxcd.io/requestedAt"] = os.date("!%Y-%m-%dT%XZ")
+return obj
diff --git a/resource_customizations/source.toolkit.fluxcd.io/OCIRepository/actions/resume/action.lua b/resource_customizations/source.toolkit.fluxcd.io/OCIRepository/actions/resume/action.lua
new file mode 100644
index 000000000..6434d8887
--- /dev/null
+++ b/resource_customizations/source.toolkit.fluxcd.io/OCIRepository/actions/resume/action.lua
@@ -0,0 +1,2 @@
+obj.spec.suspend = false
+return obj
diff --git a/resource_customizations/source.toolkit.fluxcd.io/OCIRepository/actions/suspend/action.lua b/resource_customizations/source.toolkit.fluxcd.io/OCIRepository/actions/suspend/action.lua
new file mode 100644
index 000000000..a9bfa3db9
--- /dev/null
+++ b/resource_customizations/source.toolkit.fluxcd.io/OCIRepository/actions/suspend/action.lua
@@ -0,0 +1,2 @@
+obj.spec.suspend = true
+return obj
diff --git a/resource_customizations/source.toolkit.fluxcd.io/OCIRepository/health.lua b/resource_customizations/source.toolkit.fluxcd.io/OCIRepository/health.lua
new file mode 100644
index 000000000..d1336a606
--- /dev/null
+++ b/resource_customizations/source.toolkit.fluxcd.io/OCIRepository/health.lua
@@ -0,0 +1,31 @@
+local hs = {}
+
+if obj.spec.suspend ~= nil and obj.spec.suspend then
+    hs.status = "Suspended"
+    hs.message = "Object suspended"
+    return hs
+end
+
+
+if obj.status ~= nil and obj.status.conditions ~= nil then
+    local ready_status = ""
+    for _, condition in ipairs(obj.status.conditions) do
+        if condition.type == "Ready" then
+            ready_status = condition.status
+            ready_message = condition.message
+        end
+    end
+    if ready_status == "True" then
+        hs.status = "Healthy"
+    elseif ready_status == "False" then
+        hs.status = "Degraded"
+    elseif ready_status == "Unknown" then
+        hs.status = "Progressing"
+    end
+    hs.message = ready_message
+    return hs
+end
+
+hs.status = "Progressing"
+hs.message = "Waiting to reconcile"
+return hs
